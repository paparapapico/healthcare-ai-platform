"""Initial migration

Revision ID: e8e1a53c7e95
Revises: 3dac788d6175
Create Date: 2025-08-09 00:29:55.418280

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e8e1a53c7e95'
down_revision: Union[str, Sequence[str], None] = '3dac788d6175'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exercises')
    op.drop_table('pose_analyses')
    op.drop_table('user_progress')
    op.drop_table('exercise_recommendations')
    op.drop_table('health_profiles')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('health_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('height', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('weight', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('activity_level', sa.VARCHAR(length=20), server_default=sa.text("'moderate'::character varying"), autoincrement=False, nullable=True),
    sa.Column('health_conditions', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'[]'::json"), autoincrement=False, nullable=True),
    sa.Column('medications', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'[]'::json"), autoincrement=False, nullable=True),
    sa.Column('allergies', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'[]'::json"), autoincrement=False, nullable=True),
    sa.Column('fitness_goals', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('health_profiles_pkey'))
    )
    op.create_table('exercise_recommendations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pose_analysis_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('exercise_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('priority', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], name=op.f('exercise_recommendations_exercise_id_fkey')),
    sa.ForeignKeyConstraint(['pose_analysis_id'], ['pose_analyses.id'], name=op.f('exercise_recommendations_pose_analysis_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('exercise_recommendations_pkey'))
    )
    op.create_table('user_progress',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('average_score', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('total_analyses', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('improvement_rate', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('avg_neck_score', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('avg_shoulder_score', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('avg_spine_score', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('avg_hip_score', sa.REAL(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('user_progress_pkey'))
    )
    op.create_table('pose_analyses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('overall_score', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('neck_score', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('shoulder_score', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('spine_score', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('hip_score', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('pose_landmarks', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('analysis_details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('recommendations', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('analysis_duration', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('device_info', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pose_analyses_pkey'))
    )
    op.create_table('exercises',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('difficulty', sa.VARCHAR(length=20), server_default=sa.text("'beginner'::character varying"), autoincrement=False, nullable=True),
    sa.Column('duration_minutes', sa.INTEGER(), server_default=sa.text('5'), autoincrement=False, nullable=True),
    sa.Column('instructions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('target_areas', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('benefits', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('precautions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('video_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('exercises_pkey'))
    )
    # ### end Alembic commands ###
